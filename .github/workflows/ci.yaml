name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  GOPATH: /home/runner/go/
  GOPROXY: "https://proxy.golang.org"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - run: PATH=$PATH:$GOPATH/bin make build
  image:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - run: PATH=$PATH:$GOPATH/bin make docker-build
  test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - run: PATH=$PATH:$GOPATH/bin make test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  publish:
    name: Build and push Agent container
    runs-on: ubuntu-20.04
    needs: test
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/pluralsh/deployment-operator
        # generate Docker tags based on the following events/attributes
        tags: |
            type=sha
            type=ref,event=pr
            type=ref,event=branch
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    # - uses: google-github-actions/auth@v1
    #   with:
    #     workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
    #     service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
    #     token_format: 'access_token'
    #     create_credentials_file: true
    # - uses: google-github-actions/setup-gcloud@v1.0.1
    # - name: Login to gcr
    #   run: gcloud auth configure-docker -q
    # - name: installing plural
    #   id: plrl
    #   uses: pluralsh/setup-plural@v0.1.9
    #   with:
    #     email: gh-actions@plural.sh
    # - name: Login to plural registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: dkr.plural.sh
    #     username: gh-actions@plural.sh
    #     password: ${{ steps.plrl.outputs.token }}
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: "."
        file: "./Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GIT_COMMIT=${{ github.sha }}
    - name: slack webhook
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: workflow,job,repo,message,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always()