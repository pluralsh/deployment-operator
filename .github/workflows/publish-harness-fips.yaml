name: Publish Harness FIPS
on:
  pull_request:
    branches:
    - "main"
  push:
    tags:
    - 'v*.*.*'
env:
  GOPATH: /home/runner/go/
  GOPROXY: "https://proxy.golang.org"
jobs:

  publish-harness-base:
    name: Build and push harness base FIPS container
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/pluralsh/stackrun-harness-base
          docker.io/pluralsh/stackrun-harness-base
        tags: |
          type=semver,pattern={{version}},suffix=-fips,priority=1000
          type=sha,suffix=-fips,priority=800
          type=ref,event=pr,suffix=-fips,priority=600
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: mjgpluralsh
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: "."
        file: "./dockerfiles/harness/base.fips.Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |+
          VERSION=${{ steps.meta.outputs.version }}
          GO_FIPS_IMAGE_REPO=ghcr.io/pluralsh/go-fips
          GO_FIPS_IMAGE_TAG=1.23.2
            
  publish-harness-ansible:
    name: Build and push harness ansible FIPS container
    runs-on: ubuntu-20.04
    needs: [ publish-harness-base ]
    strategy:
      matrix:
        versions:
        - ansible: '7.7.0'
          python: '3.11'
          tag: '7.7'
        - ansible: '8.7.0'
          python: '3.11'
          tag: '8.7'
        - ansible: '9.1.0'
          python: '3.12'
          tag: '9.1'
        - ansible: '10.0.0'
          python: '3.12'
          tag: '10.0'
        - ansible: '11.0.0'
          python: '3.13'
          tag: '11.0'
    permissions:
      contents: write
      discussions: write
      pull-requests: write
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/pluralsh/harness
          docker.io/pluralsh/harness
        tags: |
          type=semver,pattern={{version}},suffix=-ansible-${{ matrix.versions.tag }}-fips,priority=1000
          type=sha,suffix=-ansible-${{ matrix.versions.tag }}-fips,priority=800
          type=ref,event=pr,suffix=-ansible-${{ matrix.versions.tag }}-fips,priority=600
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: mjgpluralsh
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: "."
        file: "./dockerfiles/harness/ansible.fips.Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          ANSIBLE_VERSION=${{ matrix.versions.ansible }}
          PYTHON_VERSION=${{ matrix.versions.python }}
          HARNESS_BASE_IMAGE_REPO=ghcr.io/pluralsh/stackrun-harness-base
          HARNESS_BASE_IMAGE_TAG=${{ needs.publish-harness-base.outputs.version }}
          GO_FIPS_IMAGE_REPO=ghcr.io/pluralsh/go-fips
          GO_FIPS_IMAGE_TAG=1.23.2
