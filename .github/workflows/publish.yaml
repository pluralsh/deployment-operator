name: Publish

on:
  push:
    tags:
    - 'v*.*.*'

env:
  GOPATH: /home/runner/go/
  GOPROXY: "https://proxy.golang.org"
  REGISTRY_IMAGE: pluralsh/deployment-operator
jobs:
  test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - run: PATH=$PATH:$GOPATH/bin make test
  build-image:
    name: Build image
    needs: [test]
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    strategy:
      fail-fast: false
      matrix:
        platforms:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.platforms.runner }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Prepare
      run: |
        platform=${{ matrix.platforms.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: mjgpluralsh
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      with:
        context: "."
        file: "./Dockerfile"
        tags: ${{ env.REGISTRY_IMAGE }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ matrix.platforms.platform }}
        outputs: type=image,push-by-digest=true,name-canonical=true,push=true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GIT_COMMIT=${{ github.sha }}
    - name: Export digest
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"
    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1
  publish-image:
    name: Publish image
    needs: [build-image]
    strategy:
      fail-fast: false
      matrix:
        images: [ "ghcr.io/pluralsh/deployment-operator", "docker.io/pluralsh/deployment-operator" ]
    runs-on: ubuntu-latest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: mjgpluralsh
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.images }}
          tags: type=semver,pattern={{version}}
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ matrix.images }}:${{ steps.meta.outputs.version }}
      - name: slack webhook
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: workflow,job,repo,message,commit,author
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
        if: always()
  bump:
    name: Bump Chart Version
    runs-on: ubuntu-latest
    needs: [publish-image]
    permissions:
      contents: write
      discussions: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with: 
        persist-credentials: false
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name: update chart
      uses: pluralsh/chart-releaser@v0.1.3
      with:
        path: ./charts/deployment-operator
        release: ${{github.ref_name}}
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        title: Release ${{github.ref_name}}
        body: Automated Pull Request to release ${{github.ref_name}}
        commit-message: Updated chart to release ${{github.ref_name}}
        labels: release
        base: main
        branch: release-${{github.ref_name}}