name: Publish

on:
  push:
    tags:
    - 'v*.*.*'

env:
  GOPATH: /home/runner/go/
  GOPROXY: "https://proxy.golang.org"

jobs:
  test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - run: PATH=$PATH:$GOPATH/bin make test
  publish-docker:
    name: Build and push agent container
    runs-on: ubuntu-20.04
    needs: [test]
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/pluralsh/deployment-operator
        # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: "."
        file: "./Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GIT_COMMIT=${{ github.sha }}
    - name: slack webhook
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: workflow,job,repo,message,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always()
  bump:
    name: Bump Chart Version
    runs-on: ubuntu-20.04
    needs: [publish-docker]
    permissions:
      contents: write
      discussions: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with: 
        persist-credentials: false
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name: update chart
      uses: pluralsh/chart-releaser@v0.1.3
      with:
        path: ./charts/deployment-operator
        release: ${{github.ref_name}}
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        title: Release ${{github.ref_name}}
        body: Automated Pull Request to release ${{github.ref_name}}
        commit-message: Updated chart to release ${{github.ref_name}}
        labels: release
        base: master
        branch: release-${{github.ref_name}}